{"version":3,"sources":["lib/types.js","components/Header/Header.js","components/Header/index.js","components/Markdown/Markdown.js","components/Markdown/index.js","components/Hero/Hero.js","components/Hero/index.js","components/Collection/Collection.js","components/Collection/index.js","components/Home/Home.js","components/Home/index.js","components/ArethusaWrapper/ArethusaConfig.js","components/ArethusaWrapper/ArethusaWrapper.js","components/ArethusaWrapper/index.js","components/ControlPanel/ControlPanel.js","components/ControlPanel/index.js","components/Treebank/Treebank.js","components/Treebank/index.js","components/Publication/Publication.js","components/Publication/index.js","components/NotFound/NotFound.js","components/NotFound/index.js","components/PublicationDirector/PublicationDirector.js","components/PublicationDirector/index.js","components/PublicationGroup/PublicationGroup.js","components/PublicationGroup/index.js","components/PublicationGroupDirector/PublicationGroupDirector.js","components/PublicationGroupDirector/index.js","components/Page/Page.js","components/Page/index.js","components/TreebankService/TreebankService.js","components/TreebankService/index.js","components/EmbeddedTreebank/EmbeddedTreebank.js","components/EmbeddedTreebank/index.js","components/EmbeddedPublication/EmbeddedPublication.js","components/EmbeddedPublication/index.js","components/EmbeddedNotFound/EmbeddedNotFound.js","components/EmbeddedNotFound/index.js","components/EmbeddedPublicationDirector/EmbeddedPublicationDirector.js","components/EmbeddedPublicationDirector/index.js","components/Embedded/Embedded.js","components/Embedded/index.js","components/App/App.js","components/App/index.js","serviceWorker.js","index.js","components/Publication/Publication.module.css","components/EmbeddedTreebank/EmbeddedTreebank.module.css","components/Hero/Hero.module.css","components/Treebank/Treebank.module.css","components/ControlPanel/ControlPanel.module.css"],"names":["chunksType","shape","start","number","end","numbers","arrayOf","oneOfType","string","sectionType","locus","isRequired","path","xml","link","notes","chunks","publicationType","author","work","editors","sections","collectionType","title","element","publications","text","Header","logo","subtitle","copyright","report","github","twitter","collections","search","params","chunk","publication","w","config","children","undefined","props","href","defaultProps","transformLinkUri","uri","uriTransformer","process","Markdown","Hero","className","styles","jumbotronSmall","source","renderSubtitle","renderRow","key","scope","Array","isArray","map","e","renderEditors","s","section","getStart","renderSection","Collection","p","Home","c","collection","renderCollection","defaultConfig","main","debug","showKeys","chunkParam","auxConfPath","retrievers","TreebankRetriever","resource","docIdentifier","preselector","plugins","layouts","name","template","notifier","disable","navigator","chunkSize","navbar","resources","Gardener","route","lexInvFusekiEndpoint","morphologyServiceLat","newMorphologyServiceLat","morphologyServiceGrc","newMorphologyServiceGrc","morphologyServicePer","citeMapper","sgGrammar","depTree","contextMenu","contextMenuTemplate","morph","BspMorphRetriever","lexicalInventory","retriever","LexicalInventoryRetriever","matchAll","relation","advancedMode","relations","keyCapture","regex","greek","α","ε","η","ι","ο","υ","ω","keys","sidepanelConfig","JSON","parse","stringify","remoteUrl","ArethusaWrapper","constructor","this","render","bind","doc","window","Arethusa","$","widget","gotoSentence","remove","removeToastContainer","on","from","with","getConfig","api","getSubdoc","getMorph","sentenceId","wordId","refreshView","min","a","b","max","HtmlLink","to","ControlPanel","Component","super","state","refIsOpen","settingsIsOpen","getLines","getFbcnl","createLink","toggleRefOpen","toggleSettingsOpen","renderSettingsLinks","lines","ii","push","match","index","Number","indexOf","length","getFbcnlFromNumbers","linkQuery","Object","entries","query","queryString","setState","fullQuery","newConfig","refresh","first","back","current","next","last","LinkComponent","Link","id","dummyIcon","dropdownButton","type","aria-haspopup","aria-expanded","onClick","dropdownScroll","n","icon","Settings","Treebank","additionalArgs","refreshControlPanel","renderArethusa","componentDidMount","componentDidUpdate","location","parsed","result","forEach","prototype","hasOwnProperty","call","returnVal","arethusa","treebankContainer","publicationRow","t","renderText","Publication","subDoc","setSubdoc","interval","setInterval","componentWillUnmount","clearInterval","publicationPath","publicationLink","renderLocusRow","renderLinkRow","markdown","treebankWrapper","target","rel","NotFound","PublicationDirector","argsLookup","args","PublicationGroup","PublicationGroupDirector","Page","exact","component","targetIframeID","targetURL","commModes","Destination","RECEIVE","TreebankService","redirectTo","messageHandler","service","MessagingService","receiverCB","deregister","request","responseFn","body","ResponseMessage","Success","status","message","Error","error","err","EmbeddedTreebank","links","EmbeddedPublication","EmbeddedNotFound","EmbeddedPublicationDirector","Embedded","App","basename","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.699177a2.chunk.js","sourcesContent":["import {\n  arrayOf, number, shape, string, oneOfType, element,\n} from 'prop-types';\n\nexport const chunksType = shape({\n  start: number,\n  end: number,\n  numbers: arrayOf(oneOfType([string])),\n});\n\nexport const sectionType = shape({\n  locus: string.isRequired,\n  path: string.isRequired,\n  xml: string.isRequired,\n  link: string,\n  notes: string,\n  chunks: chunksType.isRequired,\n});\n\nexport const publicationType = shape({\n  path: string.isRequired,\n  author: string.isRequired,\n  work: string.isRequired,\n  editors: oneOfType([string, arrayOf(string)]).isRequired,\n  sections: arrayOf(sectionType).isRequired,\n});\n\nexport const collectionType = shape({\n  title: oneOfType([string, element]).isRequired,\n  publications: arrayOf(publicationType),\n  text: string,\n});\n\nexport const configType = shape({\n  logo: string,\n  link: string,\n  title: oneOfType([string, element]).isRequired,\n  subtitle: string.isRequired,\n  copyright: string,\n  report: string,\n  github: string,\n  twitter: string,\n  collections: arrayOf(collectionType).isRequired,\n});\n\nexport const locationType = shape({\n  search: string.isRequired,\n});\n\nexport const publicationMatchType = shape({\n  params: shape({\n    chunk: string.isRequired,\n  }).isRequired,\n});\n\nexport const publicationGroupMatchType = shape({\n  params: shape({\n    publication: string.isRequired,\n  }).isRequired,\n});\n\nexport const queryType = shape({\n  w: string,\n  config: string,\n});\n","import React from 'react';\nimport { string, node } from 'prop-types';\nimport { PerseidsHeader } from 'perseids-react-components';\n\nconst Header = ({ logo, link, children }) => {\n  if (link !== undefined) {\n    return <PerseidsHeader logo={logo} props={{ href: link }}>{children}</PerseidsHeader>;\n  }\n\n  return <PerseidsHeader logo={logo}>{children}</PerseidsHeader>;\n};\n\nHeader.propTypes = {\n  logo: string,\n  link: string,\n  children: node.isRequired,\n};\n\nHeader.defaultProps = {\n  logo: undefined,\n  link: undefined,\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport ReactMarkdown, { uriTransformer } from 'react-markdown';\n\nconst transformLinkUri = (uri) => (\n  uriTransformer(uri[0] === '/' ? `${process.env.PUBLIC_URL}${uri}` : uri)\n);\n\nconst Markdown = (props) => (\n  <ReactMarkdown\n    {...props}\n    transformLinkUri={transformLinkUri}\n  />\n);\n\nexport default Markdown;\n","import Markdown from './Markdown';\n\nexport default Markdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Hero.module.css';\n\nimport Markdown from '../Markdown';\n\nconst renderSubtitle = (subtitle) => (\n  <Markdown source={subtitle} />\n);\n\nconst Hero = ({ title, subtitle }) => (\n  <div className={`jumbotron jumbotron-fluid bg-dark ${styles.jumbotronSmall}`}>\n    <div className=\"container text-light\">\n      <h1 className=\"display-4\">\n        {title}\n      </h1>\n      {subtitle && renderSubtitle(subtitle)}\n    </div>\n  </div>\n);\n\nHero.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n};\n\nexport default Hero;\n","import Hero from './Hero';\n\nexport default Hero;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { publicationType } from '../../lib/types';\n\nimport Markdown from '../Markdown';\n\nconst getStart = (chunks) => {\n  const { start, numbers } = chunks;\n\n  if (start) {\n    return start;\n  }\n\n  return numbers[0];\n};\n\nconst renderSection = (section) => {\n  const { locus, path, chunks } = section;\n  const start = getStart(chunks);\n\n  return (\n    <Fragment key={path}>\n      <a href={`${path}/${start}`}>\n        {locus}\n      </a>\n      <br />\n    </Fragment>\n  );\n};\n\nconst renderEditors = (editors) => {\n  if (Array.isArray(editors)) {\n    return (\n      <ul className=\"pl-1\">\n        {editors.map((e) => <li key={e}>{e}</li>)}\n      </ul>\n    );\n  }\n\n  return editors;\n};\n\nconst renderRow = (publication) => {\n  const {\n    path,\n    author,\n    work,\n    editors,\n    sections,\n  } = publication;\n\n  return (\n    <tr className=\"d-flex\" key={path}>\n      <th className=\"col-md-3 d-none d-md-block\" scope=\"row\">{author}</th>\n      <td className=\"col-md-4 d-none d-md-block\">{work}</td>\n      <td className=\"col-8 col-sm-7 d-block d-md-none\">\n        <strong>{author}</strong>\n        ,\n        {' '}\n        <em>{work}</em>\n      </td>\n      <td className=\"col-md-3 col-lg-3 d-none d-md-block\">\n        {renderEditors(editors)}\n      </td>\n      <td className=\"col-4 col-sm-5 col-md-2 col-lg-2 text-right\">\n        {sections.map((s) => renderSection(s))}\n      </td>\n    </tr>\n  );\n};\n\nconst Collection = ({ title, publications, text }) => (\n  <div className=\"container\">\n    <div className=\"row pb-3\">\n      <div className=\"col-12\">\n        {title && <h2>{title}</h2>}\n        {text && <Markdown source={text} />}\n        <table className=\"table\">\n          {publications && (\n            <>\n              <thead className=\"thead-light\">\n                <tr className=\"d-flex\">\n                  <th className=\"col-md-3 d-none d-md-block\" scope=\"col\">Author</th>\n                  <th className=\"col-8 col-sm-7 col-md-4\" scope=\"col\">Work</th>\n                  <th className=\"col-md-3 col-lg-3 d-none d-md-block\" scope=\"col\">Editors</th>\n                  <th className=\"col-4 col-sm-5 col-md-2 col-lg-2\" scope=\"col\">Locus</th>\n                </tr>\n              </thead>\n              <tbody>\n                {publications.map((p) => renderRow(p))}\n              </tbody>\n            </>\n          )}\n        </table>\n      </div>\n    </div>\n  </div>\n);\n\nCollection.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  publications: PropTypes.arrayOf(publicationType),\n  text: PropTypes.string,\n};\n\nCollection.defaultProps = {\n  publications: undefined,\n  text: undefined,\n};\n\nexport default Collection;\n","import Collection from './Collection';\n\nexport default Collection;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\nimport Hero from '../Hero';\nimport Collection from '../Collection';\n\nconst renderCollection = (collection) => {\n  const { title, text, publications } = collection;\n\n  return (\n    <Collection\n      key={title}\n      title={title}\n      text={text}\n      publications={publications}\n    />\n  );\n};\n\nconst Home = ({ config }) => {\n  const {\n    logo,\n    link,\n    title,\n    subtitle,\n    collections,\n  } = config;\n\n  return (\n    <>\n      <Header logo={logo} link={link}>\n        {title}\n      </Header>\n      <Hero title={title} subtitle={subtitle} />\n      {collections.map((c) => renderCollection(c))}\n    </>\n  );\n};\n\nHome.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Home;\n","import Home from './Home';\n\nexport default Home;\n","const defaultConfig = {\n  main: {\n    debug: false,\n    showKeys: false,\n    chunkParam: 'chunk',\n    auxConfPath: `${process.env.PUBLIC_URL}/arethusa/configs`,\n    retrievers: {\n      TreebankRetriever: {\n        resource: 'Gardener',\n        docIdentifier: 'treebank',\n        preselector: 'w',\n      },\n    },\n    plugins: [\n      'text',\n      'morph',\n      'relation',\n      'depTree',\n    ],\n    layouts: [\n      {\n        name: 'widget',\n        template: 'js/templates/widget.html',\n      },\n    ],\n  },\n  notifier: {\n    disable: true,\n  },\n  navigator: {\n    chunkSize: 1,\n  },\n  navbar: false,\n  resources: {\n    Gardener: {\n      route: `${process.env.PUBLIC_URL}/xml/:doc`,\n      params: [\n        'doc',\n      ],\n    },\n    lexInvFusekiEndpoint: {\n      route: 'https://fuseki.perseids.org/fuseki/ds/query?format=json',\n    },\n    morphologyServiceLat: {\n      route: 'https://services.perseids.org/bsp/morphologyservice/analysis/word?lang=lat&engine=morpheuslat',\n    },\n    newMorphologyServiceLat: {\n      route: 'https://morph.perseids.org/analysis/word?lang=lat&engine=morpheuslat',\n    },\n    morphologyServiceGrc: {\n      route: 'https://services.perseids.org/bsp/morphologyservice/analysis/word?lang=grc&engine=morpheusgrc',\n    },\n    newMorphologyServiceGrc: {\n      route: 'https://morph.perseids.org/analysis/word?lang=grc&engine=morpheusgrc',\n    },\n    morphologyServicePer: {\n      route: 'https://localhost/extapi/morphologyservice/analysis/word?lang=per&engine=hazm',\n    },\n    citeMapper: {\n      route: 'https://services.perseids.org/cite_mapper/find_cite',\n    },\n    sgGrammar: {\n      route: 'https://services.perseids.org/sg/:doc.html',\n    },\n  },\n  plugins: {\n    text: {\n      main: true,\n      template: 'js/templates/text_with_context.html',\n    },\n    depTree: {\n      main: true,\n      contextMenu: false,\n      contextMenuTemplate: 'js/arethusa.dep_tree/templates/context_menu.html',\n      template: 'js/templates/dep_tree.html',\n    },\n    morph: {\n      retrievers: {\n        BspMorphRetriever: {\n          resource: 'morphologyServiceLat',\n        },\n      },\n      template: 'js/templates/morph3.html',\n      contextMenu: true,\n      contextMenuTemplate: 'js/arethusa.morph/templates/context_menu.html',\n      lexicalInventory: {\n        retriever: {\n          LexicalInventoryRetriever: {\n            resource: 'lexInvFusekiEndpoint',\n          },\n        },\n      },\n      matchAll: true,\n      '@include': 'js/arethusa.morph/configs/morph/lat_attributes.json',\n    },\n\n    relation: {\n      advancedMode: true,\n      relations: {},\n    },\n  },\n  keyCapture: {\n    regex: {\n      greek: {\n        α: '[\\u03b1\\u1f01\\u1f05\\u1f03\\u1f07\\u1f00\\u1f04\\u1f02\\u1f06\\u03ac\\u1f70\\u1fb6\\u1f81\\u1f85\\u1f83\\u1f87\\u1f80\\u1f84\\u1f82\\u1f86\\u1fb4\\u1fb2\\u1fb7\\u1fb3]',\n        ε: '[\\u03b5\\u03ad\\u1f72\\u1f10\\u1f11\\u1f14\\u1f12\\u1f15\\u1f13]',\n        η: '[\\u03b7\\u1f21\\u1f25\\u1f23\\u1f27\\u1f20\\u1f24\\u1f22\\u1f26\\u03ae\\u1f74\\u1fc6\\u1f91\\u1f95\\u1f93\\u1f97\\u1f90\\u1f94\\u1f92\\u1f96\\u1fc4\\u1fc2\\u1fc7\\u1fc3]',\n        ι: '[\\u03b9\\u1f31\\u1f35\\u1f33\\u1f37\\u1f30\\u1f34\\u1f32\\u1f36\\u03af\\u1f76\\u1fd6]',\n        ο: '[\\u03bf\\u03cc\\u1f78\\u1f40\\u1f41\\u1f44\\u1f42\\u1f45\\u1f43]',\n        υ: '[\\u03c5\\u1f51\\u1f55\\u1f53\\u1f57\\u1f50\\u1f54\\u1f52\\u1f56\\u03cd\\u1f7a\\u1fe6]',\n        ω: '[\\u03c9\\u1f61\\u1f65\\u1f63\\u1f67\\u1f60\\u1f64\\u1f62\\u1f66\\u03ce\\u1f7c\\u1ff6\\u1fa1\\u1fa5\\u1fa3\\u1fa7\\u1fa0\\u1fa4\\u1fa2\\u1fa6\\u1ff4\\u1ff2\\u1ff7\\u1ff3]',\n      },\n    },\n    keys: {},\n  },\n};\n\nconst sidepanelConfig = JSON.parse(JSON.stringify(defaultConfig));\nsidepanelConfig.main.layouts = [\n  {\n    name: 'main_with_sidepanel',\n    template: 'js/templates/main_with_sidepanel.html',\n  },\n];\n\nexport { defaultConfig, sidepanelConfig };\n","import { defaultConfig, sidepanelConfig } from './ArethusaConfig';\n\nimport './custom.css';\n\nconst elementId = 'treebank_container';\nconst remoteUrl = `${process.env.PUBLIC_URL}/arethusa/`;\n\nconst removeToastContainer = ($) => {\n  $('#toast-container').remove();\n};\n\nconst getConfig = (config) => {\n  if (config === 'sidepanel') {\n    return sidepanelConfig;\n  }\n\n  return defaultConfig;\n};\n\nclass ArethusaWrapper {\n  constructor() {\n    this.render = this.render.bind(this);\n  }\n\n  render(doc, chunk, { config, w }) {\n    // eslint-disable-next-line no-undef\n    const { Arethusa, $ } = window;\n\n    if (this.widget) {\n      if (this.doc === doc && this.chunk !== chunk) {\n        this.gotoSentence(chunk);\n        removeToastContainer($);\n      }\n    } else {\n      this.widget = new Arethusa();\n\n      this.widget\n        .on(elementId)\n        .from(remoteUrl)\n        .with(getConfig(config))\n        .start({ doc, chunk, w });\n    }\n\n    this.doc = doc;\n    this.chunk = chunk;\n  }\n\n  gotoSentence(chunk) {\n    return this.widget.api().gotoSentence(chunk);\n  }\n\n  getSubdoc() {\n    return this.widget.api().getSubdoc();\n  }\n\n  getMorph(sentenceId, wordId) {\n    return this.widget.api().getMorph(sentenceId, wordId);\n  }\n\n  refreshView() {\n    return this.widget.api().refreshView();\n  }\n}\n\nexport default ArethusaWrapper;\n","import ArethusaWrapper from './ArethusaWrapper';\n\nexport default ArethusaWrapper;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Octicon, { Settings } from '@primer/octicons-react';\nimport queryString from 'query-string';\n\nimport { string, node, bool } from 'prop-types';\n\nimport { chunksType, publicationMatchType, queryType } from '../../lib/types';\n\nimport styles from './ControlPanel.module.css';\n\nconst min = (a, b) => (a < b ? a : b);\nconst max = (a, b) => (a > b ? a : b);\n\nconst getFbcnlFromNumbers = (chunk, numbers) => {\n  const index = numbers.indexOf(chunk);\n\n  return [\n    numbers[0],\n    numbers[max(0, index - 1)],\n    chunk,\n    numbers[min(numbers.length - 1, index + 1)],\n    numbers[numbers.length - 1],\n  ];\n};\n\nconst HtmlLink = ({ to, children, ...props }) => (\n  <a href={to} {...props}>{children}</a>\n);\n\nHtmlLink.propTypes = {\n  to: string.isRequired,\n  children: node.isRequired,\n};\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      refIsOpen: false,\n      settingsIsOpen: false,\n    };\n\n    this.getLines = this.getLines.bind(this);\n    this.getFbcnl = this.getFbcnl.bind(this);\n    this.createLink = this.createLink.bind(this);\n    this.toggleRefOpen = this.toggleRefOpen.bind(this);\n    this.toggleSettingsOpen = this.toggleSettingsOpen.bind(this);\n    this.renderSettingsLinks = this.renderSettingsLinks.bind(this);\n  }\n\n  getLines() {\n    const { chunks: { start, end, numbers } } = this.props;\n\n    if (numbers) {\n      return numbers;\n    }\n\n    const lines = [];\n    for (let ii = start; ii <= end; ii += 1) {\n      lines.push(ii);\n    }\n\n    return lines;\n  }\n\n  getFbcnl() {\n    const { chunks: { start, end, numbers }, match } = this.props;\n    const { params: { chunk } } = match;\n    const index = Number(chunk);\n\n    if (numbers) {\n      return getFbcnlFromNumbers(chunk, numbers);\n    }\n\n    return [\n      start,\n      max(start, index - 1),\n      chunk,\n      min(end, index + 1),\n      end,\n    ];\n  }\n\n  createLink(to) {\n    const { linkQuery } = this.props;\n    const link = `./${to}`;\n\n    if (Object.entries(linkQuery).length > 0) {\n      const query = queryString.stringify(linkQuery);\n\n      return `${link}?${query}`;\n    }\n\n    return link;\n  }\n\n  toggleRefOpen() {\n    this.setState(({ refIsOpen }) => ({ refIsOpen: !refIsOpen }));\n  }\n\n  toggleSettingsOpen() {\n    this.setState(({ settingsIsOpen }) => ({ settingsIsOpen: !settingsIsOpen }));\n  }\n\n  renderSettingsLinks() {\n    const { fullQuery } = this.props;\n    const { config } = fullQuery;\n    const newConfig = config === 'sidepanel' ? 'default' : 'sidepanel';\n    const text = config === 'sidepanel' ? 'Hide morphology' : 'Show morphology';\n\n    return (\n      <a\n        href={`?${queryString.stringify({ ...fullQuery, config: newConfig })}`}\n        className=\"dropdown-item\"\n      >\n        {text}\n      </a>\n    );\n  }\n\n  render() {\n    const { refresh } = this.props;\n    const { refIsOpen, settingsIsOpen } = this.state;\n    const [first, back, current, next, last] = this.getFbcnl();\n    const lines = this.getLines();\n    const LinkComponent = refresh ? HtmlLink : Link;\n\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div className=\"collapse navbar-collapse\" id=\"controlPanel\">\n          <ul className={`navbar-nav mr-auto ${styles.dummyIcon}`} />\n          <ul className=\"navbar-nav mx-auto\">\n            <li className=\"nav-item\">\n              <LinkComponent className={`nav-link text-light ${styles.link}`} to={this.createLink(first)}>\n                &laquo; First\n              </LinkComponent>\n            </li>\n            <li className=\"nav-item\">\n              <LinkComponent className={`nav-link text-light ${styles.link}`} to={this.createLink(back)}>\n                &#8249; Back\n              </LinkComponent>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <button className={`btn btn-link nav-link text-light dropdown-toggle ${styles.dropdownButton}`} type=\"button\" aria-haspopup=\"true\" aria-expanded={refIsOpen} onClick={this.toggleRefOpen}>\n                {current}\n              </button>\n              <div className={`dropdown-menu ${styles.dropdownScroll} ${refIsOpen ? 'show' : ''}`}>\n                {\n                  lines.map((n) => (\n                    <LinkComponent className=\"dropdown-item\" key={n} to={this.createLink(n)} onClick={this.toggleRefOpen}>\n                      {n}\n                    </LinkComponent>\n                  ))\n                }\n              </div>\n            </li>\n            <li className=\"nav-item\">\n              <LinkComponent className={`nav-link text-light ${styles.link}`} to={this.createLink(next)}>\n                Next &#8250;\n              </LinkComponent>\n            </li>\n            <li>\n              <LinkComponent className={`nav-link text-light ${styles.link}`} to={this.createLink(last)}>\n                Last &raquo;\n              </LinkComponent>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item dropdown dropleft\">\n              <button className=\"btn btn-link nav-link text-light\" type=\"button\" aria-haspopup=\"true\" aria-expanded={settingsIsOpen} onClick={this.toggleSettingsOpen}>\n                <Octicon icon={Settings} />\n              </button>\n              <div className={`dropdown-menu ${styles.dropdownScroll} ${settingsIsOpen ? 'show' : ''}`}>\n                {this.renderSettingsLinks()}\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nControlPanel.propTypes = {\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  refresh: bool.isRequired,\n  fullQuery: queryType.isRequired,\n  linkQuery: queryType.isRequired,\n};\n\nexport default ControlPanel;\n","import ControlPanel from './ControlPanel';\n\nexport default ControlPanel;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\n\nimport { chunksType, publicationMatchType, locationType } from '../../lib/types';\n\nimport styles from './Treebank.module.css';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport ControlPanel from '../ControlPanel';\n\nclass Treebank extends Component {\n  constructor(props) {\n    super(props);\n\n    this.additionalArgs = this.additionalArgs.bind(this);\n    this.refreshControlPanel = this.refreshControlPanel.bind(this);\n    this.linkQuery = this.linkQuery.bind(this);\n    this.renderArethusa = this.renderArethusa.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderArethusa();\n  }\n\n  componentDidUpdate() {\n    this.renderArethusa();\n  }\n\n  additionalArgs() {\n    const { location: { search } } = this.props;\n    const parsed = queryString.parse(search);\n    const result = {};\n\n    ['w', 'config'].forEach((n) => {\n      if (Object.prototype.hasOwnProperty.call(parsed, n)) {\n        result[n] = parsed[n];\n      }\n    });\n\n    return result;\n  }\n\n  refreshControlPanel() {\n    const additionalArgs = this.additionalArgs();\n    let returnVal = false;\n\n    ['w'].forEach((n) => {\n      if (Object.prototype.hasOwnProperty.call(additionalArgs, n)) {\n        returnVal = true;\n      }\n    });\n\n    return returnVal;\n  }\n\n  linkQuery() {\n    const additionalArgs = this.additionalArgs();\n    const linkQuery = {};\n\n    ['config'].forEach((n) => {\n      if (Object.prototype.hasOwnProperty.call(additionalArgs, n)) {\n        linkQuery[n] = additionalArgs[n];\n      }\n    });\n\n    return linkQuery;\n  }\n\n  renderArethusa() {\n    const {\n      xml,\n      match: { params: { chunk } },\n      arethusa: { render },\n    } = this.props;\n    const additionalArgs = this.additionalArgs();\n\n    render(xml, chunk, additionalArgs);\n  }\n\n  render() {\n    const { chunks, match } = this.props;\n    const refreshControlPanel = this.refreshControlPanel();\n    const linkQuery = this.linkQuery();\n    const fullQuery = this.additionalArgs();\n\n    return (\n      <>\n        <ControlPanel\n          match={match}\n          chunks={chunks}\n          refresh={refreshControlPanel}\n          fullQuery={fullQuery}\n          linkQuery={linkQuery}\n        />\n        <div className=\"__artsa\">\n          <div id=\"treebank_container\" className={styles.treebankContainer} />\n        </div>\n      </>\n    );\n  }\n}\n\nTreebank.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n  xml: PropTypes.string.isRequired,\n};\n\nexport default Treebank;\n","import Treebank from './Treebank';\n\nexport default Treebank;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { chunksType, publicationMatchType, locationType } from '../../lib/types';\n\nimport styles from './Publication.module.css';\n\nimport Header from '../Header';\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport Treebank from '../Treebank';\nimport Markdown from '../Markdown';\n\nconst renderText = (text) => {\n  if (Array.isArray(text)) {\n    return (\n      <div>\n        {text.map((t) => (\n          <span key={t}>\n            {t}\n            <br />\n          </span>\n        ))}\n      </div>\n    );\n  }\n\n  return text;\n};\n\nconst renderRow = (title, text) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      {renderText(text)}\n    </td>\n  </tr>\n);\n\nconst renderLinkRow = (title, link) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td>\n      <a href={link}>{link}</a>\n    </td>\n  </tr>\n);\n\nconst renderMarkdownRow = (title, markdown) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      <Markdown source={markdown} />\n    </td>\n  </tr>\n);\n\nconst renderLocusRow = (title, text, publicationPath) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      {text}\n      {' '}\n      <a href={`../${publicationPath}`}>\n        (See all)\n      </a>\n    </td>\n  </tr>\n);\n\nclass Publication extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      subDoc: '',\n    };\n\n    this.setSubdoc = this.setSubdoc.bind(this);\n\n    this.arethusa = new ArethusaWrapper();\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line no-undef\n    this.interval = window.setInterval(this.setSubdoc, 100);\n  }\n\n  componentWillUnmount() {\n    // eslint-disable-next-line no-undef\n    window.clearInterval(this.interval);\n  }\n\n  setSubdoc() {\n    try {\n      const subDoc = this.arethusa.getSubdoc();\n\n      this.setState({ subDoc });\n    } catch {\n      // When this `catch` block executes it means that Arethusa has not fully loaded.\n      // So we allow the timer to execute again.\n      // We don't unset the timer in the `try` block because sometimes Arethusa is partially\n      // loaded and returns `undefined`.\n    }\n  }\n\n  render() {\n    const {\n      logo,\n      link,\n      publicationPath,\n      author,\n      work,\n      editors,\n      locus,\n      publicationLink,\n      notes,\n      xml,\n      chunks,\n      match,\n      location,\n    } = this.props;\n\n    const { subDoc } = this.state;\n\n    return (\n      <>\n        <Header logo={logo} link={link}>\n          <span>\n            <i>{work}</i>\n          </span>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n                Home\n              </a>\n            </li>\n          </ul>\n        </Header>\n        <div className=\"container pt-3\">\n          <h2>\n            <span>\n              {author}\n              ,\n              <i>\n                {' '}\n                {work}\n                {' '}\n              </i>\n              {locus}\n            </span>\n          </h2>\n          <table className=\"table\">\n            <tbody>\n              {!!author && renderRow('Author', author)}\n              {!!work && renderRow('Work', work)}\n              {!!locus && renderLocusRow('Locus', locus, publicationPath)}\n              {!!subDoc && renderRow('Reference', subDoc)}\n              {!!editors && renderRow('Editors', editors)}\n              {!!publicationLink && renderLinkRow('Link', publicationLink)}\n              {!!notes && renderMarkdownRow('Notes', notes)}\n            </tbody>\n          </table>\n          <div className={styles.treebankWrapper}>\n            <Treebank\n              xml={xml}\n              chunks={chunks}\n              location={location}\n              match={match}\n              arethusa={this.arethusa}\n            />\n          </div>\n          <div className=\"pt-1 pb-4 text-right\">\n            <a href={`${process.env.PUBLIC_URL}/xml/${xml}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              View XML\n            </a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nPublication.propTypes = {\n  logo: PropTypes.string,\n  link: PropTypes.string,\n  publicationPath: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  work: PropTypes.string.isRequired,\n  editors: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n  locus: PropTypes.string.isRequired,\n  publicationLink: PropTypes.string,\n  notes: PropTypes.string,\n  xml: PropTypes.string.isRequired,\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nPublication.defaultProps = {\n  logo: undefined,\n  link: undefined,\n  publicationLink: undefined,\n  notes: undefined,\n};\n\nexport default Publication;\n","import Publication from './Publication';\n\nexport default Publication;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\n\nconst NotFound = ({ config: { logo, link } }) => (\n  <>\n    <Header logo={logo} link={link}>\n      <span>\n        Not Found\n      </span>\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n            Home\n          </a>\n        </li>\n      </ul>\n    </Header>\n    <div className=\"container pt-5\">\n      <div className=\"row col-12 pt-5 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h1>Error 404</h1>\n        </div>\n      </div>\n      <div className=\"row col-12 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h2>Publication not found</h2>\n        </div>\n      </div>\n      <div className=\"row col-12 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h2>\n            <a href={`${process.env.PUBLIC_URL}/`}>\n              Return to homepage\n            </a>\n          </h2>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nNotFound.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default NotFound;\n","import NotFound from './NotFound';\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { configType, publicationMatchType, locationType } from '../../lib/types';\n\nimport Publication from '../Publication';\nimport NotFound from '../NotFound';\n\nclass PublicationDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n    const { logo, link } = config;\n\n    config.collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        const {\n          author, work, editors, path: publicationPath,\n        } = publication;\n\n        publication.sections.forEach((section) => {\n          const {\n            path,\n            locus,\n            link: publicationLink,\n            notes,\n            xml,\n            chunks,\n          } = section;\n\n          argsLookup[path] = {\n            logo,\n            link,\n            publicationPath,\n            author,\n            work,\n            editors,\n            locus,\n            publicationLink,\n            notes,\n            xml,\n            chunks,\n          };\n        });\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match, location } = this.props;\n    const { publication } = match.params;\n    const args = this.argsLookup[publication];\n\n    if (args === undefined) {\n      return <NotFound config={config} />;\n    }\n\n    return <Publication {...args} match={match} location={location} />;\n  }\n}\n\nPublicationDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nexport default PublicationDirector;\n","import PublicationDirector from './PublicationDirector';\n\nexport default PublicationDirector;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\nimport Hero from '../Hero';\nimport Collection from '../Collection';\n\nconst renderCollection = (collection) => {\n  const { title, publications } = collection;\n\n  return (\n    <Collection\n      key={title}\n      title={title}\n      publications={publications}\n    />\n  );\n};\n\nconst PublicationGroup = ({\n  config: {\n    logo,\n    link,\n    title,\n    subtitle,\n    collections,\n  },\n}) => (\n  <>\n    <Header logo={logo} link={link}>\n      {title}\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n            Home\n          </a>\n        </li>\n      </ul>\n    </Header>\n    <Hero title={title} subtitle={subtitle} />\n    {collections.map((c) => renderCollection(c))}\n  </>\n);\n\nPublicationGroup.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default PublicationGroup;\n","import PublicationGroup from './PublicationGroup';\n\nexport default PublicationGroup;\n","import React, { Component } from 'react';\n\nimport { configType, publicationGroupMatchType } from '../../lib/types';\n\nimport PublicationGroup from '../PublicationGroup';\nimport NotFound from '../NotFound';\n\nclass PublicationGroupDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n    const {\n      logo,\n      link,\n      title,\n      subtitle,\n      report,\n      github,\n      twitter,\n      collections,\n    } = config;\n\n    collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        const { path, author, work } = publication;\n\n        argsLookup[path] = {\n          logo,\n          link,\n          title,\n          subtitle,\n          report,\n          github,\n          twitter,\n          collections: [\n            {\n              title: (\n                <>\n                  {author}\n                  ,\n                  {' '}\n                  <i>{work}</i>\n                </>\n              ),\n              publications: [publication],\n            },\n          ],\n        };\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match } = this.props;\n    const { publication } = match.params;\n    const newConfig = this.argsLookup[publication];\n\n    if (newConfig === undefined) {\n      return <NotFound config={config} />;\n    }\n\n    return <PublicationGroup config={newConfig} />;\n  }\n}\n\nPublicationGroupDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationGroupMatchType.isRequired,\n};\n\nexport default PublicationGroupDirector;\n","import PublicationGroupDirector from './PublicationGroupDirector';\n\nexport default PublicationGroupDirector;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { PerseidsFooter } from 'perseids-react-components';\n\nimport { configType } from '../../lib/types';\n\nimport Home from '../Home';\nimport PublicationDirector from '../PublicationDirector';\nimport PublicationGroupDirector from '../PublicationGroupDirector';\nimport NotFound from '../NotFound';\n\nconst Page = ({\n  config,\n  config: {\n    copyright,\n    report,\n    github,\n    twitter,\n  },\n}) => (\n  <>\n    <Switch>\n      <Route exact path=\"/\" component={() => <Home config={config} />} />\n      <Route exact path=\"/:publication/\" render={(props) => <PublicationGroupDirector {...props} config={config} />} />\n      <Route exact path=\"/:publication/:chunk\" render={(props) => <PublicationDirector {...props} config={config} />} />\n      <Route path=\"/\" component={() => <NotFound config={config} />} />\n    </Switch>\n    <PerseidsFooter\n      copyright={copyright}\n      report={report}\n      github={github}\n      twitter={twitter}\n    />\n  </>\n);\n\nPage.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Page;\n","import Page from './Page';\n\nexport default Page;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport {\n  MessagingService,\n  ResponseMessage,\n  WindowIframeDestination as Destination,\n} from 'alpheios-messaging';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\n\nconst config = {\n  name: 'treebank',\n  targetIframeID: 'string-not-used',\n  targetURL: 'string-not-used',\n  commModes: [Destination.commModes.RECEIVE],\n};\n\nconst error = (request, message) => ResponseMessage.Error(request, new Error(message));\n\nclass TreebankService extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { redirectTo: null };\n    this.messageHandler = this.messageHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.service = new MessagingService('treebank-service', new Destination({ ...config, receiverCB: this.messageHandler }));\n  }\n\n  componentWillUnmount() {\n    this.service.deregister();\n  }\n\n  messageHandler(request, responseFn) {\n    const { arethusa } = this.props;\n    const { body } = request;\n    const [name] = Object.keys(body);\n\n    try {\n      switch (name) {\n        case 'gotoSentence':\n          this.setState({ redirectTo: body.gotoSentence.sentenceId });\n\n          responseFn(ResponseMessage.Success(request, { status: 'success' }));\n          break;\n        case 'getMorph':\n          responseFn(ResponseMessage.Success(\n            request,\n            arethusa.getMorph(body.getMorph.sentenceId, body.getMorph.wordId),\n          ));\n          break;\n        case 'refreshView':\n          responseFn(ResponseMessage.Success(request, arethusa.refreshView()));\n          break;\n        default:\n          responseFn(error(`Unsupported request: ${name}`));\n      }\n    } catch (err) {\n      responseFn(ResponseMessage.Error(request, err));\n    }\n  }\n\n  render() {\n    const { redirectTo } = this.state;\n\n    return (\n      redirectTo && <Redirect to={redirectTo} />\n    );\n  }\n}\n\nTreebankService.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n};\n\nexport default TreebankService;\n","import TreebankService from './TreebankService';\n\nexport default TreebankService;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\n\nimport { publicationMatchType, locationType } from '../../lib/types';\n\nimport styles from './EmbeddedTreebank.module.css';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport TreebankService from '../TreebankService';\n\nclass EmbeddedTreebank extends Component {\n  constructor(props) {\n    super(props);\n\n    this.additionalArgs = this.additionalArgs.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderArethusa();\n  }\n\n  componentDidUpdate() {\n    this.renderArethusa();\n  }\n\n  additionalArgs() {\n    const { location: { search } } = this.props;\n    const parsed = queryString.parse(search);\n    const result = {};\n\n    ['w'].forEach((n) => {\n      if (Object.prototype.hasOwnProperty.call(parsed, n)) {\n        result[n] = parsed[n];\n      }\n    });\n\n    return result;\n  }\n\n  renderArethusa() {\n    const {\n      xml,\n      match: { params: { chunk } },\n      arethusa: { render },\n    } = this.props;\n    const additionalArgs = this.additionalArgs();\n\n    render(xml, chunk, additionalArgs);\n  }\n\n  render() {\n    const { match, arethusa } = this.props;\n    const { params: { publication, chunk } } = match;\n\n    return (\n      <>\n        <div className=\"__artsa\">\n          <div id=\"treebank_container\" className={styles.treebankContainer} />\n        </div>\n        <div className={styles.links}>\n          <a href={`${process.env.PUBLIC_URL}/${publication}/${chunk}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            Credits and more information\n          </a>\n        </div>\n        <TreebankService arethusa={arethusa} />\n      </>\n    );\n  }\n}\n\nEmbeddedTreebank.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n  xml: PropTypes.string.isRequired,\n};\n\nexport default EmbeddedTreebank;\n","import EmbeddedTreebank from './EmbeddedTreebank';\n\nexport default EmbeddedTreebank;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { publicationMatchType, locationType } from '../../lib/types';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport EmbeddedTreebank from '../EmbeddedTreebank';\n\nclass EmbeddedPublication extends Component {\n  constructor(props) {\n    super(props);\n\n    this.arethusa = new ArethusaWrapper();\n  }\n\n  render() {\n    const {\n      xml,\n      match,\n      location,\n    } = this.props;\n\n    return (\n      <div>\n        <EmbeddedTreebank\n          xml={xml}\n          location={location}\n          match={match}\n          arethusa={this.arethusa}\n        />\n      </div>\n    );\n  }\n}\n\nEmbeddedPublication.propTypes = {\n  xml: PropTypes.string.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nexport default EmbeddedPublication;\n","import EmbeddedPublication from './EmbeddedPublication';\n\nexport default EmbeddedPublication;\n","import React from 'react';\n\nconst EmbeddedNotFound = () => (\n  <div className=\"container pt-5\">\n    <div className=\"row col-12 pt-5 pb-3\">\n      <div className=\"col-12 text-center\">\n        <h1>Error 404</h1>\n      </div>\n    </div>\n    <div className=\"row col-12 pb-3\">\n      <div className=\"col-12 text-center\">\n        <h2>Publication not found</h2>\n      </div>\n    </div>\n  </div>\n);\n\nexport default EmbeddedNotFound;\n","import EmbeddedNotFound from './EmbeddedNotFound';\n\nexport default EmbeddedNotFound;\n","import React, { Component } from 'react';\nimport { configType, publicationMatchType, locationType } from '../../lib/types';\n\nimport EmbeddedPublication from '../EmbeddedPublication';\nimport EmbeddedNotFound from '../EmbeddedNotFound';\n\nclass EmbeddedPublicationDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n\n    config.collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        publication.sections.forEach((section) => {\n          const { path, xml } = section;\n\n          argsLookup[path] = { xml };\n        });\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match, location } = this.props;\n    const { publication } = match.params;\n    const args = this.argsLookup[publication];\n\n    if (args === undefined) {\n      return <EmbeddedNotFound config={config} />;\n    }\n\n    const { xml } = args;\n\n    return <EmbeddedPublication xml={xml} match={match} location={location} />;\n  }\n}\n\nEmbeddedPublicationDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationMatchType.isRequired,\n  location: locationType.isRequired,\n};\n\nexport default EmbeddedPublicationDirector;\n","import EmbeddedPublicationDirector from './EmbeddedPublicationDirector';\n\nexport default EmbeddedPublicationDirector;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { configType } from '../../lib/types';\n\nimport EmbeddedPublicationDirector from '../EmbeddedPublicationDirector';\nimport EmbeddedNotFound from '../EmbeddedNotFound';\n\nconst Embedded = ({ config }) => (\n  <Switch>\n    <Route exact path=\"/embed/:publication/:chunk\" render={(props) => <EmbeddedPublicationDirector {...props} config={config} />} />\n    <Route path=\"/\" component={() => <EmbeddedNotFound config={config} />} />\n  </Switch>\n);\n\nEmbedded.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Embedded;\n","import Embedded from './Embedded';\n\nexport default Embedded;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport config from '../../config.json';\n\nimport Page from '../Page';\nimport Embedded from '../Embedded';\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route path=\"/embed/\" component={() => <Embedded config={config} />} />\n      <Route path=\"/\" component={() => <Page config={config} />} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'perseids-react-components/build/css/index.css';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"publicationRow\":\"Publication_publicationRow__3taiJ\",\"treebankWrapper\":\"Publication_treebankWrapper__2KYz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebankContainer\":\"EmbeddedTreebank_treebankContainer__2X6pS\",\"links\":\"EmbeddedTreebank_links__1ndYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jumbotronSmall\":\"Hero_jumbotronSmall__IN8kP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebankContainer\":\"Treebank_treebankContainer__sQn_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdownButton\":\"ControlPanel_dropdownButton__1o6TV\",\"dropdownScroll\":\"ControlPanel_dropdownScroll__17rgQ\",\"dummyIcon\":\"ControlPanel_dummyIcon__3Nk3N\",\"link\":\"ControlPanel_link__OEqVs\"};"],"sourceRoot":""}